{"ast":null,"code":"var _jsxFileName = \"/Users/satan/praktikum/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupEditAvatar from './PopupEditAvatar';\nimport PopupEditUser from './PopupEditUser';\nimport PopupAddCard from './PopupAddCard';\nimport PopupWithConfirm from './PopupWithConfirm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cardIdToDelete, setCardIdToDelete] = React.useState('');\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  React.useEffect(() => {\n    Promise.all([api.getUser(), api.getCards()]).then(([userData, cardsData]) => {\n      setCurrentUser(userData);\n      setCards(cardsData);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(data) {\n    setIsLoading(true);\n    api.updateUserInfo(data).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    setIsLoading(true);\n    api.saveNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }\n\n  function handleUpdateAvatar(data) {\n    setIsLoading(true);\n    api.newAvatar(data).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }\n\n  function handleCardDelete(card) {\n    setIsConfirmPopupOpen(true);\n    setCardIdToDelete(card);\n  }\n\n  function handleCardDeleteConfirm(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(item => item !== card);\n      setCards(newCards);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onCardDelete: handleCardDelete,\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PopupEditAvatar, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PopupEditUser, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PopupAddCard, {\n      isOpen: isAddCardPopupOpen,\n      onClose: closeAllPopups,\n      onAddCard: handleAddPlaceSubmit,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithConfirm, {\n      isOpen: isConfirmPopupOpen,\n      onClose: closeAllPopups,\n      onHandleCardDeleteConfirm: handleCardDeleteConfirm,\n      cardId: cardIdToDelete,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard !== null && selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"M0unwk3vCoCi4A2sdl7ThmVshqU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/satan/praktikum/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupEditAvatar","PopupEditUser","PopupAddCard","PopupWithConfirm","ImagePopup","api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","cardIdToDelete","setCardIdToDelete","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","useEffect","Promise","all","getUser","getCards","then","userData","cardsData","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","data","updateUserInfo","closeAllPopups","finally","handleAddPlaceSubmit","saveNewCard","newCard","handleUpdateAvatar","newAvatar","avatar","handleCardDelete","handleCardDeleteConfirm","deleteCard","_id","newCards","filter","item","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","map","c"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupEditAvatar from './PopupEditAvatar'\nimport PopupEditUser from './PopupEditUser'\nimport PopupAddCard from './PopupAddCard'\nimport PopupWithConfirm from './PopupWithConfirm'\nimport ImagePopup from './ImagePopup'\nimport api from '../utils/api'\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [cardIdToDelete, setCardIdToDelete] = React.useState('');\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUser(),\n            api.getCards()\n        ])\n            .then(([userData, cardsData]) => {\n                setCurrentUser(userData)\n                setCards(cardsData)\n            })\n            .catch((err) => console.log(err))\n    }, []);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    function handleAddPlaceClick() {\n        setIsAddCardPopupOpen(true)\n    }\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n    function handleUpdateUser(data){\n        setIsLoading(true)\n        api.updateUserInfo(data)\n            .then(userData => {\n                setCurrentUser(userData)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n            .finally(() => setIsLoading(false))\n    }\n    function handleAddPlaceSubmit(data){\n        setIsLoading(true)\n        api.saveNewCard(data)\n            .then(newCard => {\n                setCards([newCard, ...cards])\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n            .finally(() => setIsLoading(false))\n    }\n    function handleUpdateAvatar(data){\n        setIsLoading(true)\n        api.newAvatar(data)\n            .then(avatar => {\n                setCurrentUser(avatar)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n            .finally(() => setIsLoading(false))\n    }\n    function handleCardDelete(card){\n        setIsConfirmPopupOpen(true)\n        setCardIdToDelete(card);\n    }\n\n    function handleCardDeleteConfirm(card) {\n        setIsLoading(true)\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter(item => item !== card)\n                setCards(newCards)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n            .finally(() => setIsLoading(false))\n    }\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n            .catch((err) => console.log(err))\n    }\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddCardPopupOpen(false);\n        setIsConfirmPopupOpen(false)\n        setSelectedCard(null);\n    }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <Header />\n          <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n          />\n          <Footer />\n          <PopupEditAvatar\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n          />\n          <PopupEditUser\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              isLoading={isLoading}\n          />\n          <PopupAddCard\n              isOpen={isAddCardPopupOpen}\n              onClose={closeAllPopups}\n              onAddCard={handleAddPlaceSubmit}\n              isLoading={isLoading}\n          />\n          <PopupWithConfirm\n              isOpen={isConfirmPopupOpen}\n              onClose={closeAllPopups}\n              onHandleCardDeleteConfirm={handleCardDeleteConfirm}\n              cardId={cardIdToDelete}\n              isLoading={isLoading}\n          />\n          <ImagePopup\n              card={selectedCard !== null && selectedCard}\n              onClose={closeAllPopups}\n          />\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}